type File {
  filename: String!
  mimetype: String!
}

type RecebimentoPorOrgao {
  orgao: String
  total: Float
}

type Recebimento {
  orgao: String
  ano: String
  mes: String
  matricula: String
  cpf: String
  nome: String
  controle: String
  lotacao: String
  rubrica: String
  parcela: String
  valor: Float
}

type Inadimplentes {
  id: String
  matricula: String
  nome: String
  cpf: String
  celular1: String
  celular2: String
  fone1: String
  empresa: String
}

input RecebimentoInput {
  orgao: String
  ano: String
  mes: String
  matricula: String
  cpf: String
  nome: String
  controle: String
  lotacao: String
  rubrica: String
  parcela: String
  valor: Float
}

input FiltroInput {
  ano: String
  mes: String
  orgao: String
  rubrica: String
  matricula: String
}

type Query {
  recebimentos: [Recebimento]
  recebimento(id: String): Recebimento
  recebimentoPeriodo(ano: String, mes: String): [Recebimento]
  recebimentoFiltro(filtro: FiltroInput): [Recebimento]
  recebidos(ano: String, mes: String, rubrica: String): Boolean
  recebimentoOrgao(orgao: String): [Recebimento]
  recebimentoMatricula(matricula: String): [Recebimento]

  # Para Relatório inadimplentes
  inadimplentes(ano: String, mes: String): [Inadimplentes]

  # Para gráfico
  totaisMensais(ano: String): [Float]
  totalMensalPorEmpresa(ano: String, mes: String): [RecebimentoPorOrgao]
}

type Query {
  file: File
}

type Mutation {
  uploadFile(file: Upload!): File
}

type Mutation {
  insertRecebimento(data: RecebimentoInput): Boolean
  deleteRecebimento(id: String): Boolean
  deleteRecebimentos(ano: String, mes: String): Boolean
}
